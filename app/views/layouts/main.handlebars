<!doctype html>
<html lang="es">
  <head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    <title>{{#if title}}{{title}} — {{/if}}Backend 2 — Cailotto</title>
    <!-- Bootstrap CSS -->
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
    <style>
      :root { color-scheme: light dark; }
      body { font-family: system-ui, -apple-system, 'Segoe UI', Roboto, Helvetica, Arial, sans-serif; }
      .app-header { margin-bottom: 18px; }
      .brand { font-weight: 600; }
      nav a { margin-right: 10px; }
      .badge { padding: 2px 8px; border-radius: 999px; font-size: 12px; border: 1px solid #9996; }
      .cart-badge { 
        position: relative; 
        top: -8px; 
        left: -5px;
        background-color: #dc3545; 
        color: white;
        font-size: 10px;
        padding: 2px 6px;
        border-radius: 10px;
        font-weight: bold;
      }
      .toolbar { display: flex; gap: 8px; align-items: center; margin-bottom: 10px; }
      input, select, button { padding: 6px 10px; }
      /* Color for order item text */
      .order-item { color: #0d6efd; }
      /* Order status text colors */
      .order-status { font-weight: 600; }
      .status-pending { color: #fd7e14; }
      .status-paid { color: #198754; }
      .status-delivered { color: #0d6efd; }
      .status-cancelled { color: #dc3545; }
    </style>
  </head>
  <body class="bg-light">
    <header class="app-header bg-white shadow-sm">
      <div class="container d-flex align-items-center justify-content-between py-2">
        <div>
          <a class="brand text-decoration-none text-dark" href="/">Sistema de Órdenes</a>
        </div>
        <nav>
          <a class="me-3 text-decoration-none" href="/orders">Órdenes</a>
          <a class="me-3 text-decoration-none" href="/products">Productos</a>
          {{#if user}}
            {{#if (eq user.role 'user')}}
              <a class="me-3 text-decoration-none position-relative" href="/cart" id="cart-link">
                Carrito
                <span class="cart-badge" id="cart-count" style="display:none;">0</span>
              </a>
              <a class="me-3 text-decoration-none" href="/tickets">Mis Compras</a>
            {{else if (eq user.role 'admin')}}
              <a class="me-3 text-decoration-none" href="/products/new">Gestionar Productos</a>
              <a class="me-3 text-decoration-none" href="/admin/tickets">Tickets</a>
            {{/if}}
            <a class="me-3 text-decoration-none" href="/api/sessions/profile">Perfil</a>
          {{/if}}

          {{#if user}}
            <span class="me-2">Hola, <strong>{{#if user.first_name}}{{user.first_name}} {{user.last_name}}{{else}}{{user.email}}{{/if}}</strong></span>
            <form action="/auth/logout" method="POST" style="display:inline">
              <button class="btn btn-sm btn-outline-secondary" type="submit">Cerrar sesión</button>
            </form>
          {{else}}
            <a class="btn btn-sm btn-primary" href="/auth/jwt/login">Iniciar sesión</a>
          {{/if}}
        </nav>
      </div>
    </header>

    <main class="container mb-5">
      {{{body}}}
    </main>

    <!-- Bootstrap JS bundle -->
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
    
    {{#if user}}
      {{#if (eq user.role 'user')}}
        <script>
          // Cargar el conteo del carrito cuando la página carga
          async function loadCartCount() {
            try {
              const response = await fetch('/api/cart/count');
              const data = await response.json();
              const badge = document.getElementById('cart-count');
              if (data.count > 0) {
                badge.textContent = data.count;
                badge.style.display = 'inline';
              } else {
                badge.style.display = 'none';
              }
            } catch (err) {
              console.error('Error loading cart count:', err);
            }
          }
          
          // Cargar al inicio
          loadCartCount();
          
          // Recargar cada 30 segundos (opcional)
          setInterval(loadCartCount, 30000);
        </script>
      {{/if}}
    {{/if}}
  </body>
</html>